// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`E2e Snapshot 1`] = `
Object {
  "Outputs": Object {
    "FunctionNameToSnsAndDynamoDb": Object {
      "Value": Object {
        "Ref": "ToSnsAndDynamoDb13696817",
      },
    },
    "ServerlessSpyWsUrl": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "wss://",
            Object {
              "Ref": "ServerlessSpyApiGwWebSocketB4986709",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".amazonaws.com/prod",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": Object {
      "DependsOn": Array [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client(\\"s3\\")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

CONFIGURATION_TYPES = [\\"TopicConfigurations\\", \\"QueueConfigurations\\", \\"LambdaFunctionConfigurations\\"]

def handler(event: dict, context):
  response_status = \\"SUCCESS\\"
  error_message = \\"\\"
  try:
    props = event[\\"ResourceProperties\\"]
    bucket = props[\\"BucketName\\"]
    notification_configuration = props[\\"NotificationConfiguration\\"]
    request_type = event[\\"RequestType\\"]
    managed = props.get('Managed', 'true').lower() == 'true'
    stack_id = event['StackId']

    if managed:
      config = handle_managed(request_type, notification_configuration)
    else:
      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

    put_bucket_notification_configuration(bucket, config)
  except Exception as e:
    logging.exception(\\"Failed to put bucket notification configuration\\")
    response_status = \\"FAILED\\"
    error_message = f\\"Error: {str(e)}. \\"
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
  external_notifications = find_external_notifications(bucket, stack_id)

  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\"
    return notification

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\"{stack_id}-\\")]

  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  return external_notifications

def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)

def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      \\"Status\\": response_status,
      \\"Reason\\": f\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\",
      \\"PhysicalResourceId\\": event.get(\\"PhysicalResourceId\\") or event[\\"LogicalResourceId\\"],
      \\"StackId\\": event[\\"StackId\\"],
      \\"RequestId\\": event[\\"RequestId\\"],
      \\"LogicalResourceId\\": event[\\"LogicalResourceId\\"],
      \\"NoEcho\\": False,
    }
  ).encode(\\"utf-8\\")
  headers = {\\"content-type\\": \\"\\", \\"content-length\\": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event[\\"ResponseURL\\"], headers=headers, data=response_body, method=\\"PUT\\")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode(\\"utf-8\\"))
    print(\\"Status code: \\" + response.reason)
  except Exception as e:
      print(\\"send(..) failed executing request.urlopen(..): \\" + str(e))
",
        },
        "Description": "AWS CloudFormation handler for \\"Custom::S3BucketNotifications\\" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": Array [
          Object {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FromSnsToSqsAndS3AllowInvokeTestMyTopicNo1964ECD796255293D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FromSnsToSqsAndS3DD1CDB48",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": Object {
          "Ref": "MyTopicNo10D152776",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "FromSnsToSqsAndS3DD1CDB48": Object {
      "DependsOn": Array [
        "FromSnsToSqsAndS3ServiceRoleDefaultPolicy7B1CCE08",
        "FromSnsToSqsAndS3ServiceRoleCD383645",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3957015dd67c832692644e95d92196ff2ada39286e6e0ffe1240b6d3c4e7e127.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_LAMBDA_EXEC_WRAPPER": "/opt/spy-wrapper",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "S3_BUCKET_NAME": Object {
              "Ref": "MyBucketF68F3FF0",
            },
            "SQS_URL": Object {
              "Ref": "MyQueueNo27A959A93",
            },
            "SSPY_DEBUG": "true",
            "SSPY_FUNCTION_NAME": "FromSnsToSqsAndS3",
            "SSPY_INFRA_MAPPING": "{}",
            "SSPY_WS_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                  },
                  ".execute-api.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/prod",
                ],
              ],
            },
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "ServerlessSpyExtensionEA4873A0",
          },
        ],
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "FromSnsToSqsAndS3ServiceRoleCD383645",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FromSnsToSqsAndS3MyTopicNo138932820": Object {
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "FromSnsToSqsAndS3DD1CDB48",
            "Arn",
          ],
        },
        "FilterPolicy": Object {
          "test": Array [
            "test",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": Object {
          "Ref": "MyTopicNo10D152776",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "FromSnsToSqsAndS3ServiceRoleCD383645": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FromSnsToSqsAndS3ServiceRoleDefaultPolicy7B1CCE08": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "MyBucketF68F3FF0",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "MyBucketF68F3FF0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MyQueueNo27A959A93",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                    },
                    "/*/*/@connections/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FromSnsToSqsAndS3ServiceRoleDefaultPolicy7B1CCE08",
        "Roles": Array [
          Object {
            "Ref": "FromSnsToSqsAndS3ServiceRoleCD383645",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FromSqsToEventBridgeE78842BE": Object {
      "DependsOn": Array [
        "FromSqsToEventBridgeServiceRoleDefaultPolicyCAE36D6B",
        "FromSqsToEventBridgeServiceRole95F97034",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9ead32172ab355ca59de0a6e6aa6b042d9be0a18ebeb9797410aaabee61c98d3.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_LAMBDA_EXEC_WRAPPER": "/opt/spy-wrapper",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "EB_NAME": Object {
              "Ref": "MyEventBus251E60F8",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SSPY_DEBUG": "true",
            "SSPY_FUNCTION_NAME": "FromSqsToEventBridge",
            "SSPY_INFRA_MAPPING": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "MyQueueNo27A959A93",
                      "Arn",
                    ],
                  },
                  "\\":\\"Sqs#MyQueueNo2\\"}",
                ],
              ],
            },
            "SSPY_SUBSCRIBED_TO_SQS": "true",
            "SSPY_WS_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                  },
                  ".execute-api.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/prod",
                ],
              ],
            },
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "ServerlessSpyExtensionEA4873A0",
          },
        ],
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "FromSqsToEventBridgeServiceRole95F97034",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FromSqsToEventBridgeServiceRole95F97034": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FromSqsToEventBridgeServiceRoleDefaultPolicyCAE36D6B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MyQueueNo27A959A93",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MyEventBus251E60F8",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                    },
                    "/*/*/@connections/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FromSqsToEventBridgeServiceRoleDefaultPolicyCAE36D6B",
        "Roles": Array [
          Object {
            "Ref": "FromSqsToEventBridgeServiceRole95F97034",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FromSqsToEventBridgeSqsEventSourceTestMyQueueNo24D3D979A0048B77D": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "MyQueueNo27A959A93",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "FromSqsToEventBridgeE78842BE",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "MyBucketAllowBucketNotificationsToTestServerlessSpySubscription037770329D87F83A7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription0036DF4AB",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "MyBucketF68F3FF0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyBucketF68F3FF0": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "MyBucketNotifications46AC0CD2": Object {
      "DependsOn": Array [
        "MyBucketAllowBucketNotificationsToTestServerlessSpySubscription037770329D87F83A7",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "MyBucketF68F3FF0",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "LambdaFunctionConfigurations": Array [
            Object {
              "Events": Array [
                "s3:ObjectCreated:Put",
              ],
              "LambdaFunctionArn": Object {
                "Fn::GetAtt": Array [
                  "ServerlessSpySubscription0036DF4AB",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "MyEventBridge1F4311C4": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "MyEventBus251E60F8",
        },
        "EventPattern": Object {
          "version": Array [
            "0",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ReceiveEventBridge1A8F9A7B",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ServerlessSpySubscription13C6B2B7D",
                "Arn",
              ],
            },
            "Id": "Target1",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "MyEventBridgeAllowEventRuleTestReceiveEventBridgeE66203697BDF9DA9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ReceiveEventBridge1A8F9A7B",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "MyEventBridge1F4311C4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyEventBridgeAllowEventRuleTestServerlessSpySubscription13F5C56BA05D346A0": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription13C6B2B7D",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "MyEventBridge1F4311C4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyEventBus251E60F8": Object {
      "Properties": Object {
        "Name": "TestMyEventBus25AE8456",
      },
      "Type": "AWS::Events::EventBus",
    },
    "MyQueueNo154EF6659": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "MyQueueNo1PolicyD523EAC1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:SendMessage",
              "Condition": Object {
                "ArnEquals": Object {
                  "aws:SourceArn": Object {
                    "Ref": "MyTopicNo10D152776",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "sns.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MyQueueNo154EF6659",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "MyQueueNo154EF6659",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "MyQueueNo1TestMyTopicNo1964ECD79AF2A440D": Object {
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "MyQueueNo154EF6659",
            "Arn",
          ],
        },
        "Protocol": "sqs",
        "TopicArn": Object {
          "Ref": "MyTopicNo10D152776",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "MyQueueNo27A959A93": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTable794EDED1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
        ],
        "StreamSpecification": Object {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "MyTopicNo10D152776": Object {
      "Type": "AWS::SNS::Topic",
    },
    "ReceiveEventBridge1A8F9A7B": Object {
      "DependsOn": Array [
        "ReceiveEventBridgeServiceRoleDefaultPolicy1EADA25A",
        "ReceiveEventBridgeServiceRoleBF34AC2A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "798d95ca5ea9167fe4c020efbb7df9d7998800b0911757a1ea86cfe4b8fc2c2f.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_LAMBDA_EXEC_WRAPPER": "/opt/spy-wrapper",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "SSPY_DEBUG": "true",
            "SSPY_FUNCTION_NAME": "ReceiveEventBridge",
            "SSPY_INFRA_MAPPING": "{}",
            "SSPY_WS_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                  },
                  ".execute-api.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/prod",
                ],
              ],
            },
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "ServerlessSpyExtensionEA4873A0",
          },
        ],
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ReceiveEventBridgeServiceRoleBF34AC2A",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ReceiveEventBridgeServiceRoleBF34AC2A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ReceiveEventBridgeServiceRoleDefaultPolicy1EADA25A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                    },
                    "/*/*/@connections/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ReceiveEventBridgeServiceRoleDefaultPolicy1EADA25A",
        "Roles": Array [
          Object {
            "Ref": "ReceiveEventBridgeServiceRoleBF34AC2A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ReceiveSqs09F03F56": Object {
      "DependsOn": Array [
        "ReceiveSqsServiceRoleDefaultPolicyB7E3156E",
        "ReceiveSqsServiceRoleB707237A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "798d95ca5ea9167fe4c020efbb7df9d7998800b0911757a1ea86cfe4b8fc2c2f.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_LAMBDA_EXEC_WRAPPER": "/opt/spy-wrapper",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "SSPY_DEBUG": "true",
            "SSPY_FUNCTION_NAME": "ReceiveSqs",
            "SSPY_INFRA_MAPPING": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "MyQueueNo154EF6659",
                      "Arn",
                    ],
                  },
                  "\\":\\"Sqs#MyQueueNo1\\"}",
                ],
              ],
            },
            "SSPY_SUBSCRIBED_TO_SQS": "true",
            "SSPY_WS_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                  },
                  ".execute-api.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/prod",
                ],
              ],
            },
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "ServerlessSpyExtensionEA4873A0",
          },
        ],
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ReceiveSqsServiceRoleB707237A",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ReceiveSqsServiceRoleB707237A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ReceiveSqsServiceRoleDefaultPolicyB7E3156E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MyQueueNo154EF6659",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                    },
                    "/*/*/@connections/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ReceiveSqsServiceRoleDefaultPolicyB7E3156E",
        "Roles": Array [
          Object {
            "Ref": "ReceiveSqsServiceRoleB707237A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ReceiveSqsSqsEventSourceTestMyQueueNo1F2086853E6B28A23": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "MyQueueNo154EF6659",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "ReceiveSqs09F03F56",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "ServerlessSpyApiGwWebSocketB4986709": Object {
      "Properties": Object {
        "Name": "ApiGwWebSocket",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.action",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "ServerlessSpyApiGwWebSocketStageC331FC25": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ServerlessSpyApiGwWebSocketB4986709",
        },
        "AutoDeploy": true,
        "StageName": "prod",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "ServerlessSpyApiGwWebSocketconnectRoute312F1B97": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ServerlessSpyApiGwWebSocketB4986709",
        },
        "AuthorizationType": "AWS_IAM",
        "RouteKey": "$connect",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "ServerlessSpyApiGwWebSocketconnectRouteconnectD0BB4267",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "ServerlessSpyApiGwWebSocketconnectRouteconnectD0BB4267": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ServerlessSpyApiGwWebSocketB4986709",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              Object {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "ServerlessSpyOnConnect645F94AB",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "ServerlessSpyApiGwWebSocketconnectRouteconnectPermission0ECF9CDC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpyOnConnect645F94AB",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ServerlessSpyApiGwWebSocketB4986709",
              },
              "/*/*$connect",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessSpyApiGwWebSocketdisconnectRoute1A0A3B9C": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ServerlessSpyApiGwWebSocketB4986709",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$disconnect",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "ServerlessSpyApiGwWebSocketdisconnectRoutedisconnect27020FD4",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "ServerlessSpyApiGwWebSocketdisconnectRoutedisconnect27020FD4": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ServerlessSpyApiGwWebSocketB4986709",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              Object {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "ServerlessSpyOnDisconnect798FB62E",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "ServerlessSpyApiGwWebSocketdisconnectRoutedisconnectPermission49C4B30D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpyOnDisconnect798FB62E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ServerlessSpyApiGwWebSocketB4986709",
              },
              "/*/*$disconnect",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessSpyApiGwWebSocketsendmessageRouteCA382280": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ServerlessSpyApiGwWebSocketB4986709",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "sendmessage",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "ServerlessSpyApiGwWebSocketsendmessageRouteSendMessage655C76E3",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "ServerlessSpyApiGwWebSocketsendmessageRouteSendMessage655C76E3": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ServerlessSpyApiGwWebSocketB4986709",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              Object {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "ServerlessSpySubscription0036DF4AB",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "ServerlessSpyApiGwWebSocketsendmessageRouteSendMessagePermission603B5AE9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription0036DF4AB",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ServerlessSpyApiGwWebSocketB4986709",
              },
              "/*/*sendmessage",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessSpyExtensionEA4873A0": Object {
      "Properties": Object {
        "CompatibleRuntimes": Array [
          "nodejs12.x",
          "nodejs14.x",
          "nodejs16.x",
        ],
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2b5a2af79e9a77e8c4f5959b31d4e1d644e5d723a693a3fc8d80789289c6517e.zip",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "ServerlessSpyOnConnect645F94AB": Object {
      "DependsOn": Array [
        "ServerlessSpyOnConnectServiceRoleDefaultPolicy3DA62E46",
        "ServerlessSpyOnConnectServiceRoleFC57701A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "5657c343ac5aa80d8849c8052b4cb33556ab821cb989c63837b55b365c1f9878.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "SSPY_DEBUG": "true",
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpyOnConnectServiceRoleFC57701A",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ServerlessSpyOnConnectServiceRoleDefaultPolicy3DA62E46": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerlessSpyOnConnectServiceRoleDefaultPolicy3DA62E46",
        "Roles": Array [
          Object {
            "Ref": "ServerlessSpyOnConnectServiceRoleFC57701A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerlessSpyOnConnectServiceRoleFC57701A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerlessSpyOnDisconnect798FB62E": Object {
      "DependsOn": Array [
        "ServerlessSpyOnDisconnectServiceRoleDefaultPolicy908DBF32",
        "ServerlessSpyOnDisconnectServiceRoleD2185195",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "33704ba92bab46137c5e2ab3d5709aff2c38060e82048b4a609007599a8ff8f0.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "SSPY_DEBUG": "true",
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpyOnDisconnectServiceRoleD2185195",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ServerlessSpyOnDisconnectServiceRoleD2185195": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerlessSpyOnDisconnectServiceRoleDefaultPolicy908DBF32": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerlessSpyOnDisconnectServiceRoleDefaultPolicy908DBF32",
        "Roles": Array [
          Object {
            "Ref": "ServerlessSpyOnDisconnectServiceRoleD2185195",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerlessSpyRuleAllMyEventBus059FF67A": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "MyEventBus251E60F8",
        },
        "EventPattern": Object {
          "version": Array [
            "0",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ServerlessSpySubscription0036DF4AB",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ServerlessSpyRuleAllMyEventBusAllowEventRuleTestServerlessSpySubscription037770329EE5AF7D1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription0036DF4AB",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpyRuleAllMyEventBus059FF67A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessSpySubscription0036DF4AB": Object {
      "DependsOn": Array [
        "ServerlessSpySubscription0ServiceRoleDefaultPolicyD8FA77F4",
        "ServerlessSpySubscription0ServiceRoleF955D76C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9b4a77b65b7b3070351c0c6ba76d6306812290f19e1615ec5f7bc3dc9f60a67f.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "SSPY_INFRA_MAPPING": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "MyBucketF68F3FF0",
                      "Arn",
                    ],
                  },
                  "\\":\\"S3#MyBucket\\",\\"",
                  Object {
                    "Ref": "MyTopicNo10D152776",
                  },
                  "\\":\\"SnsSubscription#MyTopicNo1#MyQueueNo1\\",\\"eventBridge\\":\\"EventBridge#MyEventBus\\",\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "MyTable794EDED1",
                      "Arn",
                    ],
                  },
                  "\\":\\"DynamoDB#MyTable\\"}",
                ],
              ],
            },
            "SSPY_WS_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                  },
                  ".execute-api.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/prod",
                ],
              ],
            },
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription0ServiceRoleF955D76C",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ServerlessSpySubscription0AllowInvokeTestMyTopicNo1964ECD79C6B117A9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription0036DF4AB",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": Object {
          "Ref": "MyTopicNo10D152776",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessSpySubscription0DynamoDBEventSourceTestMyTableFA18AF5FBAD5ECE5": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "MyTable794EDED1",
            "StreamArn",
          ],
        },
        "FunctionName": Object {
          "Ref": "ServerlessSpySubscription0036DF4AB",
        },
        "MaximumRetryAttempts": 0,
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "ServerlessSpySubscription0MyTopicNo183F8FCED": Object {
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription0036DF4AB",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": Object {
          "Ref": "MyTopicNo10D152776",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "ServerlessSpySubscription0ServiceRoleDefaultPolicyD8FA77F4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                    },
                    "/*/*/@connections/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MyTable794EDED1",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerlessSpySubscription0ServiceRoleDefaultPolicyD8FA77F4",
        "Roles": Array [
          Object {
            "Ref": "ServerlessSpySubscription0ServiceRoleF955D76C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerlessSpySubscription0ServiceRoleF955D76C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerlessSpySubscription13C6B2B7D": Object {
      "DependsOn": Array [
        "ServerlessSpySubscription1ServiceRoleDefaultPolicyB2E063F5",
        "ServerlessSpySubscription1ServiceRoleCB639294",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9b4a77b65b7b3070351c0c6ba76d6306812290f19e1615ec5f7bc3dc9f60a67f.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "SSPY_INFRA_MAPPING": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"",
                  Object {
                    "Ref": "MyTopicNo10D152776",
                  },
                  "\\":\\"SnsTopic#MyTopicNo1\\",\\"eventBridge\\":\\"EventBridgeRule#MyEventBus#MyEventBridge\\"}",
                ],
              ],
            },
            "SSPY_WS_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                  },
                  ".execute-api.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/prod",
                ],
              ],
            },
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription1ServiceRoleCB639294",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ServerlessSpySubscription1AllowInvokeTestMyTopicNo1964ECD795255AF94": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription13C6B2B7D",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": Object {
          "Ref": "MyTopicNo10D152776",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessSpySubscription1MyTopicNo1F1471199": Object {
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription13C6B2B7D",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": Object {
          "Ref": "MyTopicNo10D152776",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "ServerlessSpySubscription1ServiceRoleCB639294": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerlessSpySubscription1ServiceRoleDefaultPolicyB2E063F5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                    },
                    "/*/*/@connections/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerlessSpySubscription1ServiceRoleDefaultPolicyB2E063F5",
        "Roles": Array [
          Object {
            "Ref": "ServerlessSpySubscription1ServiceRoleCB639294",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerlessSpySubscription2AllowInvokeTestMyTopicNo1964ECD798CE12661": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription2F82BAF5F",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": Object {
          "Ref": "MyTopicNo10D152776",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServerlessSpySubscription2F82BAF5F": Object {
      "DependsOn": Array [
        "ServerlessSpySubscription2ServiceRoleDefaultPolicyA3D9E5E8",
        "ServerlessSpySubscription2ServiceRole7162AC7F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9b4a77b65b7b3070351c0c6ba76d6306812290f19e1615ec5f7bc3dc9f60a67f.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "SSPY_INFRA_MAPPING": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"",
                  Object {
                    "Ref": "MyTopicNo10D152776",
                  },
                  "\\":\\"SnsSubscription#MyTopicNo1#FromSnsToSqsAndS3\\"}",
                ],
              ],
            },
            "SSPY_WS_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                  },
                  ".execute-api.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/prod",
                ],
              ],
            },
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription2ServiceRole7162AC7F",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ServerlessSpySubscription2MyTopicNo1ABC3C742": Object {
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "ServerlessSpySubscription2F82BAF5F",
            "Arn",
          ],
        },
        "FilterPolicy": Object {
          "test": Array [
            "test",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": Object {
          "Ref": "MyTopicNo10D152776",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "ServerlessSpySubscription2ServiceRole7162AC7F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerlessSpySubscription2ServiceRoleDefaultPolicyA3D9E5E8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                    },
                    "/*/*/@connections/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerlessSpySubscription2ServiceRoleDefaultPolicyA3D9E5E8",
        "Roles": Array [
          Object {
            "Ref": "ServerlessSpySubscription2ServiceRole7162AC7F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerlessSpyWebSocketB4D8CE14": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "connectionId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "connectionId",
            "KeyType": "HASH",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "ToSnsAndDynamoDb13696817": Object {
      "DependsOn": Array [
        "ToSnsAndDynamoDbServiceRoleDefaultPolicy256D4481",
        "ToSnsAndDynamoDbServiceRoleB0BC8E77",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e7ff2a7516b279b0c0e4e115aaf1e813a8e6ba33e12b277bc85f15876a3f165b.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_LAMBDA_EXEC_WRAPPER": "/opt/spy-wrapper",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DYNAMODB_TABLE_NAME": Object {
              "Ref": "MyTable794EDED1",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SNS_TOPIC_ARN": Object {
              "Ref": "MyTopicNo10D152776",
            },
            "SSPY_DEBUG": "true",
            "SSPY_FUNCTION_NAME": "ToSnsAndDynamoDb",
            "SSPY_INFRA_MAPPING": "{}",
            "SSPY_WS_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                  },
                  ".execute-api.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/prod",
                ],
              ],
            },
            "SSPY_WS_TABLE_NAME": Object {
              "Ref": "ServerlessSpyWebSocketB4D8CE14",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "ServerlessSpyExtensionEA4873A0",
          },
        ],
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ToSnsAndDynamoDbServiceRoleB0BC8E77",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ToSnsAndDynamoDbServiceRoleB0BC8E77": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ToSnsAndDynamoDbServiceRoleDefaultPolicy256D4481": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "MyTopicNo10D152776",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "MyTable794EDED1",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerlessSpyWebSocketB4D8CE14",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "ServerlessSpyApiGwWebSocketB4986709",
                    },
                    "/*/*/@connections/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ToSnsAndDynamoDbServiceRoleDefaultPolicy256D4481",
        "Roles": Array [
          Object {
            "Ref": "ToSnsAndDynamoDbServiceRoleB0BC8E77",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
